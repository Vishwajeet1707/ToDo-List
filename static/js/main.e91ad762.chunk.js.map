{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","onEditing","setState","isEditing","onChange","e","input","target","value","onSubmit","preventDefault","state","length","alert","items","id","Date","getTime","text","isCompleted","concat","setProgress","onClick","console","log","updated","map","item","onDelete","filtered","filter","progress","Math","floor","all","localStorage","getItem","JSON","parse","this","setItem","stringify","class","role","style","width","aria-valuenow","aria-valuemin","aria-valuemax","i","className","type","checked","title","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e91ad762.chunk.js","sourcesContent":["import React,{Component} from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      items: [],\n      input: '',\n      isEditing: false,\n      progress:0\n    }\n  }\n\n  componentDidMount(){\n    let all = localStorage.getItem(\"items\") !== null ? JSON.parse(localStorage.getItem(\"items\")) : [];\n    this.setState({items : all})\n    \n  }\n\n  componentDidUpdate(){\n    localStorage.setItem(\"items\",JSON.stringify(this.state.items));\n    // localStorage.setItem(\"progress\",this.state.progress);\n  }\n\n  onEditing = () => {\n    this.setState({isEditing : true});\n   }\n  onChange = e => { \n    this.setState({input : e.target.value})\n  }\n  onSubmit = e => {\n    e.preventDefault();\n    if (this.state.input.length === 0 ) {\n      alert(\"Pls enter something!\");\n      return 0;\n    }\n    const items = {id: new Date().getTime(), text : this.state.input, isCompleted:false};\n    this.setState({items : this.state.items.concat(items), input:\"\"},() => this.setProgress(this.state.items));\n   }\n\n  onClick = id => {\n      console.log(id);\n      let updated = this.state.items.map(item => {\n        if(item.id === id){\n          item.isCompleted = !item.isCompleted;\n        }\n        return item;\n      })\n      this.setState({items : updated}, () => this.setProgress(this.state.items));\n   }\n\n\n  onDelete = (id) => { \n    let filtered = this.state.items.filter(item => {\n      return item.id !== id;\n    })\n    this.setState({items : filtered}, () => this.setProgress(this.state.items));\n    // this.setProgress(this.state.items);\n  }\n\n  setProgress = items => {\n    let checked = items.filter(item => {return item.isCompleted})\n    let progress = checked.length/items.length\n    this.setState({progress : Math.floor(progress * 100)})\n  }\n\n  render() {\n    return (\n      <form id=\"todo-list\" onSubmit={this.onSubmit}>\n        <div class=\"progress\">\n          <div class=\"progress-bar\" role=\"progressbar\" style={{width: this.state.progress + \"%\"}} aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\">{this.state.progress + \"%\"}</div>\n        </div> \n\n        { this.state.items.length > 0 ?\n        this.state.items.map((item,i) => {\n          return(\n            <span className=\"todo-wrap\" key={i}>\n            <span onClick={() => this.onClick(item.id)}>\n              <input type=\"checkbox\" checked={item.isCompleted}/>\n              <label className=\"todo\" ><i className=\"fa fa-check\"></i>{item.text}</label>\n            </span>\n\n            <span className=\"delete-item\" title=\"remove\" onClick={() => this.onDelete(item.id)}>\n              <i className=\"fa fa-times-circle\"></i>\n            </span> \n          </span>\n          )\n        }) : <p></p>\n        }\n\n        {this.state.isEditing ? <span className=\"todo-wrap\" ><input onChange={this.onChange} value={this.state.input}/></span> : \"\"}\n        \n        <div id=\"add-todo\" onClick={this.onEditing}><i className=\"fa fa-plus\"></i> &nbsp; Add an Item</div>\n\n      </form>\n    );\n  }\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}